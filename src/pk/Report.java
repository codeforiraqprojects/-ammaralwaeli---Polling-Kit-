/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pk;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Volume_2inC
 */
public class Report extends javax.swing.JFrame implements CRUD {

    /**
     * Creates new form Report
     */
    Connection con;

    public Report() {
        try {

            initComponents();

            con = DBConnection.connect();

            ResultSet rs = selectAllCount("Person", "p_id_in_ps");
            noVoters.setText("Number of voters : " + rs.getInt("jj"));

            rs = selectCount("Person", "gender", "gender", "1");
            noMale.setText("Number of male voters : " + rs.getInt("jj"));

            rs = selectCount("Person", "gender", "gender", "0");
            noFemale.setText("Number of female voters : " + rs.getInt("jj"));

            rs = selectCount("Person", "status", "status", "1");
            noHasVoted.setText("Number of voters has voted : " + rs.getInt("jj"));

            rs = selectCount("Person", "status", "status", "1 And gender=1");
            noMaleHasVoted.setText("Number of male voters has voted : " + rs.getInt("jj"));

            rs = selectCount("Person", "status", "status", "1 And gender=0");
            noFemaleHasVoted.setText("Number of female voters has voted : " + rs.getInt("jj"));

            rs = selectCount("Person", "status", "status", "1 And fingerprint!=0");
            noFingerprints.setText("Number of readed fingerprints : " + rs.getInt("jj"));

            rs = selectCount("Person", "status", "status", "1 And fingerprint=0");
            noFingerprintsnot.setText("Number of not readed fingerprints : " + rs.getInt("jj"));

            dateOfOpen.setText("Date of opening station : " + Home.open);

            dateOfClose.setText("Date of closing station : " + Home.close);

            rs = selectAll("barcodes");
            barcodes.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        noVoters = new javax.swing.JLabel();
        noMale = new javax.swing.JLabel();
        noFemale = new javax.swing.JLabel();
        noMaleHasVoted = new javax.swing.JLabel();
        noFemaleHasVoted = new javax.swing.JLabel();
        noHasVoted = new javax.swing.JLabel();
        noFingerprints = new javax.swing.JLabel();
        dateOfOpen = new javax.swing.JLabel();
        dateOfClose = new javax.swing.JLabel();
        noFingerprintsnot = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        barcodes = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("رقم المركز الفرعي : 1001");

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("اسم المركز الفرعي : مركز المدينة");

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("رقم مركز الاقتراع : 100101");

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 51));
        jLabel5.setText("اسم مركز الاقتراع : مدرسة المآثر");

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText("رقم محطة الاقتراغ : 10010101");

        noVoters.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noVoters.setText("Number of voters : ");

        noMale.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noMale.setText("Number of male voters : ");

        noFemale.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noFemale.setText("Number of female voters : ");

        noMaleHasVoted.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noMaleHasVoted.setText("Number of male voters has voted : ");

        noFemaleHasVoted.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noFemaleHasVoted.setText("Number of female voters has voted : ");

        noHasVoted.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noHasVoted.setText("Number of voters has voted : ");

        noFingerprints.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noFingerprints.setText("Number of readed fingerprints : ");

        dateOfOpen.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dateOfOpen.setText("Date of opening station : ");

        dateOfClose.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dateOfClose.setText("Date of closing station : ");

        noFingerprintsnot.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        noFingerprintsnot.setText("Number of not readed fingerprints : ");

        barcodes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(barcodes);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jButton1.setText("Exit");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(48, 48, 48)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1))
                            .addComponent(jSeparator1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(150, 150, 150)
                                .addComponent(jLabel4)
                                .addGap(25, 25, 25)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(noVoters)
                            .addComponent(noMale)
                            .addComponent(noFemale)
                            .addComponent(noMaleHasVoted)
                            .addComponent(noHasVoted)
                            .addComponent(dateOfOpen)
                            .addComponent(noFingerprintsnot)
                            .addComponent(noFingerprints)
                            .addComponent(noFemaleHasVoted)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateOfClose)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(220, 220, 220)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 53, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(noVoters)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noMale)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noFemale)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noHasVoted)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noMaleHasVoted)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noFemaleHasVoted)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noFingerprints)
                        .addGap(4, 4, 4)
                        .addComponent(noFingerprintsnot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateOfOpen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateOfClose)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Report().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable barcodes;
    private javax.swing.JLabel dateOfClose;
    private javax.swing.JLabel dateOfOpen;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel noFemale;
    private javax.swing.JLabel noFemaleHasVoted;
    private javax.swing.JLabel noFingerprints;
    private javax.swing.JLabel noFingerprintsnot;
    private javax.swing.JLabel noHasVoted;
    private javax.swing.JLabel noMale;
    private javax.swing.JLabel noMaleHasVoted;
    private javax.swing.JLabel noVoters;
    // End of variables declaration//GEN-END:variables

    @Override
    public void insert(String tableName, String[] coloums, String[] values) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void update(String tableName, String[] values, String where, String whereValue) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void delete(String tableName, String where, String whereValue) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public ResultSet selectAll(String tableName) {
        ResultSet rs = null;
        try {
            PreparedStatement pst = con.prepareStatement("select * from " + tableName);
            rs = pst.executeQuery();
        } catch (SQLException ex) {

        }
        return rs;
    }

    @Override
    public ResultSet selectAllWhere(String tableName, String where, String whereValue) {

        return null;
    }

    @Override
    public ResultSet selectAll(String tableName, String[] coloums) {
        ResultSet rs = null;
        try {
            String sql = "select " + coloums[0];
            for (int i = 1; i < coloums.length - 1; i++) {
                sql += "," + coloums[i] + ",";
            }
            sql += coloums[coloums.length - 1];
            PreparedStatement pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
        } catch (SQLException ex) {

        }
        return rs;
    }

    @Override
    public ResultSet select(String tableName, String[] coloums, String where, String whereValue) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public ResultSet selectCount(String tableName, String column, String where, String wValue) {
        ResultSet rs = null;
        try {
            PreparedStatement pst = con.prepareStatement("select count (" + column + ") AS jj from " + tableName + " where " + where + "=" + wValue);
            rs = pst.executeQuery();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return rs;
    }

    @Override
    public ResultSet selectAllCount(String tableName, String column) {
        ResultSet rs = null;
        try {
            PreparedStatement pst = con.prepareStatement("select count (" + column + ") AS jj from " + tableName);
            rs = pst.executeQuery();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        return rs;
    }
}
