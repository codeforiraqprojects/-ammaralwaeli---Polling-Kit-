/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pk;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Ammar ALwaeli
 */
public class Home extends javax.swing.JFrame implements CRUD {

    /**
     * Creates new form Home1
     */
    Connection con;
    static LocalDateTime open,close;
    public Home() {
        try {
            con = DBConnection.connect();
            initComponents();
            lblBarcode.setVisible(false);
            barcode.setVisible(false);
            btnOk.setVisible(false);
            open=LocalDateTime.now();
        } catch (ClassNotFoundException ex) {
            //Logger.getLogger(Home1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public boolean isValid(String s) {
        boolean flag = true;
        if (s == null) {
            return false;
        }
        for (char c : s.toCharArray()) {
            if (c < '0' || c > '9') {
                flag = false;
                break;
            }
        }
        return flag;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        VoterID = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        lblFullName = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblSequenceOfVoter = new javax.swing.JLabel();
        lblBarcode = new javax.swing.JLabel();
        barcode = new javax.swing.JTextField();
        btnOk = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("رقم المركز الفرعي : 1001");

        jLabel2.setText("رقم مركز الاقتراع : 100101");

        jLabel3.setText("رقم محطة الاقتراغ : 10010101");

        jLabel4.setText("اسم المركز الفرعي : مركز المدينة");

        jLabel5.setText("اسم مركز الاقتراع : مدرسة المآثر");

        jLabel6.setText("ادخل رقم الناخب");

        jButton1.setText("موافق");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        lblBarcode.setText("Barcode");

        btnOk.setText("OK");
        btnOk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOkMouseClicked(evt);
            }
        });

        jButton2.setText("انهاء التصويت");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(96, 96, 96)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(55, 55, 55))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(150, 150, 150)
                                .addComponent(jLabel4)
                                .addGap(80, 80, 80))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addGap(18, 18, 18)
                                        .addComponent(VoterID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addGap(20, 20, 20))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblId)
                            .addComponent(lblFullName)
                            .addComponent(lblGender)
                            .addComponent(lblSequenceOfVoter)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblBarcode)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnOk)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(VoterID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(39, 39, 39)
                        .addComponent(lblId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFullName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblGender)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSequenceOfVoter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                        .addComponent(lblBarcode))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(barcode, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOk)
                            .addComponent(jButton2))))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if (VoterID.getText().equals("") || !isValid(VoterID.getText())) {
            JOptionPane.showMessageDialog(null, "Please enter valid voter id");
            return;
        }
        String gender = "Male";
        try {
            ResultSet rs = selectAllWhere("Person", "voter_id", VoterID.getText());
            int x = 0;
            while (rs.next()) {
                x++;
            }
            rs = selectAllWhere("person", "voter_id", VoterID.getText());
            if (x == 1) {
                if (String.valueOf(rs.getInt("voter_id")).length() == 8) {
                    if (rs.getInt("status") == 0) {
                        if (rs.getInt("gender") == 0) {
                            gender = "Female";
                        }

                        System.out.println(rs.getInt("fingerprint"));
                        lblId.setText("ID : " + rs.getInt("voter_id"));
                        lblFullName.setText("Full Name : " + rs.getString("first_name") + " "
                                + rs.getString("father_name") + " " + rs.getString("grand_name"));
                        lblGender.setText("Gender : " + gender);
                        lblSequenceOfVoter.setText("Sequence of voter in ps : " + rs.getInt("p_id_in_ps"));
                        String fingerprint = "";
                        // int count=0;
                        do {
                            fingerprint = JOptionPane.showInputDialog("Enter your fingerprint");
                        } while (!isValid(fingerprint));
                        
                        int finger = fingerprint.equals("") ? 0 : Integer.parseInt(fingerprint);
                        if (finger == rs.getInt("fingerprint")) {
                            lblBarcode.setVisible(true);
                            barcode.setVisible(true);
                            btnOk.setVisible(true);
                            VoterID.setEditable(false);
                            jButton1.setEnabled(false);
                        } else {
                            JOptionPane.showMessageDialog(null, "This fingerprint is not belong to this user");
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "This voter was voted at " + rs.getString("time_of_voting"));
                        VoterID.setEditable(true);
                        jButton1.setEnabled(true);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Enter correct voter id");
                }

                // frame.dispose();
            } else if (x > 1) {
                JOptionPane.showMessageDialog(null, "There is duplicate");
                // frame.dispose();
            } else {
                /* VoterID.setEditable(true);
                jButton1.setEnabled(true);*/
                JOptionPane.showMessageDialog(null, "Voter id not found");

                // frame.dispose();
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        /*VoterID.setEditable(false);
        jButton1.setEnabled(false);*/
    }//GEN-LAST:event_jButton1MouseClicked

    private void btnOkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOkMouseClicked
        try {
            ResultSet rs = selectAllWhere("barcodes", "barcode_number", barcode.getText());
            int x = 0;
            while (rs.next()) {
                x++;
            }
            if (x == 1) {
                JOptionPane.showMessageDialog(null, "This balot has been used");
            } else {
                insert("barcodes", new String[]{"barcode_number"}, new String[]{barcode.getText()});
                //update
                update("Person", new String[]{"status", "time_of_voting"}, "voter_id", VoterID.getText());
                JOptionPane.showMessageDialog(null, "Voting done seccessfully");
                VoterID.setText("");
                barcode.setText("");
                lblId.setText("");
                lblFullName.setText("");
                lblGender.setText("");
                lblSequenceOfVoter.setText("");
                lblBarcode.setVisible(false);
                btnOk.setVisible(false);
                barcode.setVisible(false);
                VoterID.setEditable(true);
                jButton1.setEnabled(true);

            }
        } catch (HeadlessException | SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage()+"666");
        }
    }//GEN-LAST:event_btnOkMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        int a=JOptionPane.showConfirmDialog(null, "هل انت متأكد من انهاء التصويت؟ ", "انهاء التصويت", JOptionPane.YES_NO_OPTION);
        if(a==0){
            close=LocalDateTime.now();
            Report r=new Report();
            this.setVisible(false);
            r.setVisible(true);
            
            try {
                con.close();
            } catch (SQLException ex) {
                //Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField VoterID;
    private javax.swing.JTextField barcode;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblBarcode;
    private javax.swing.JLabel lblFullName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblSequenceOfVoter;
    // End of variables declaration//GEN-END:variables

    @Override
    public void insert(String tableName, String coloums[], String[] values) {
        try {
            String sql = "INSERT INTO " + tableName + " (";
            int i;
            for (i = 0; i < values.length - 1; i++) {
                sql += coloums[i] + ",";
            }
            sql += coloums[i] + ") values(";
            for (i = 0; i < values.length - 1; i++) {
                sql += "?,";
            }
            sql += "?)";
            System.out.println(sql);
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setInt(1, Integer.parseInt(barcode.getText().trim()));
            pst.executeUpdate();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage()+" Insert");
        }
    }

    @Override
    public void update(String tableName, String[] values, String where, String whereValue) {
        try {
            String sql = "update " + tableName + " set ";
            int i;
            for (i = 0; i < values.length - 1; i++) {
                sql +=" "+ values[i] + " = ?,";
            }
            sql +=" "+ values[i] + " = ? where " + where + " = ?";
            System.out.println(sql);
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setInt(1, 1);
            pst.setString(2, LocalDateTime.now() + "");
            pst.setString(3, whereValue);
            pst.executeUpdate();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage()+" Update");
        }
    }

    @Override
    public ResultSet selectAll(String tableName) {
        return null;
    }

    @Override
    public ResultSet selectAllWhere(String tableName, String where, String whereValue) {
        ResultSet rs = null;
        try {
            PreparedStatement pst = con.prepareStatement("select * from " + tableName + " where " + where + "=?");
            pst.setInt(1, Integer.parseInt(whereValue));
            rs = pst.executeQuery();
        } catch (SQLException ex) {

        }
        return rs;
    }

    @Override
    public ResultSet selectAll(String tableName, String[] coloums) {
        return null;
    }

    @Override
    public void delete(String tableName, String where, String whereValue) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public ResultSet select(String tableName, String[] coloums, String where, String whereValue) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public ResultSet selectCount(String tableName, String column, String where, String wValue) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public ResultSet selectAllCount(String tableName, String column) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
